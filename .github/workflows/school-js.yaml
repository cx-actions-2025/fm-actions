name: Test School Vanilla JS

on:
  workflow_call:
    inputs:
        team-name:
            required: true
            type: string
    secrets:
        test-repo:
            required: true
        auth-token:
            required: true
        backend-url: 
            required: true
        auth-key:
            required: true

jobs:
  test-project:
    runs-on: ubuntu-latest
    steps:

      - name: checkout repo
        uses: actions/checkout@v3

      - name: checkout tests
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.test-repo }}
          token: ${{ secrets.auth-token }}
          path: tests

      - name: move test files
        run: mv tests/*.test.js src/

      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: install dependencies
        run: npm ci

      - name: run test on bug 01
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Local Storage Functions" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-201"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 02
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Add transactions addTransaction test #1" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-202"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 03
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Add transactions addTransaction test #2" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-203"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 04
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Add transactions addTransaction test #3" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-204"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 05
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Add transactions addTransaction test #4" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-205"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 06
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Add transactions addTransaction test #5" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-206"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 07
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Update Values Functions updatevalues test #1" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-207"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 08
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Update Values Functions updatevalues #2" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-208"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 09
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Update Values Functions updatevalues test #3" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-209"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 10
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Transaction List DOM addTransactionDOM test #1" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-210"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 11
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Transaction List DOM addTransactionDOM test #2" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-211"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 12
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Transaction List DOM addTransactionDOM test #3" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-212"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 13
        shell: bash {0}
        run: |
          set +e
          npx jest -t "chart chart test #1" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-213"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 14
        shell: bash {0}
        run: |
          set +e
          npx jest -t "chart chart test #2" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-214"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 15
        shell: bash {0}
        run: |
          set +e
          npx jest -t "chart chart test #3" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-215"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 16
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Generating Report" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-216"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 17
        shell: bash {0}
        run: |
          set +e
          npx jest -t "Category Management" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-217"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 18
        shell: bash {0}
        run: |
          set +e
          npx jest -t "CSS Validations UI test" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-218"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 19
        shell: bash {0}
        run: |
          set +e
          npx jest -t "CSS Validations UX test" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-219"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 20
        shell: bash {0}
        run: |
          set +e
          npx jest -t "More Test cases UI test #2" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-220"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 21
        shell: bash {0}
        run: |
          set +e
          npx jest -t "More Test cases UI test #3" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-221"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 22
        shell: bash {0}
        run: |
          set +e
          npx jest -t "More Test cases Js test #1" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-222"
            }'
          fi
          exit ${result}
        continue-on-error: true

      - name: run test on bug 23
        shell: bash {0}
        run: |
          set +e
          npx jest -t "More Test cases Js test #2" > /dev/null 2>&1
          result=$?
          if [ ${result} -ne 0 ]; then
            echo "FAILED"
          else
            echo "PASSED"
            curl -X POST ${{ secrets.backend-url }} \
            -H "Content-Type: application/json" \
            -H "x-webhook-token: ${{ secrets.auth-key }}" \
            -d '{
                "teamName": "${{ inputs.team-name }}",
                "bugCode": "BUG-223"
            }'
          fi
          exit ${result}
        continue-on-error: true
